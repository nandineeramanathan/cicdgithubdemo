# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Mule CI with Mule Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  NEXUS_USERNAME: ${{ secrets.NEXUSUSERNAME }}
  NEXUS_PASSWORD: ${{ secrets.NEXUSPASSWORD }}
  PLATFORM_USERNAME: ${{ secrets.PLATFORMUSERNAME }}
  PLATFORM_PASSWORD: ${{ secrets.PLATFORMPASSWORD }}
  ENVIRONMENT: ${{ secrets.ENVIRONMENT}}
  CONNECTEDAPP_CLIENTSECRET: e84eBCb16ee04112A74F6E90A8B406CA
  CONNECTEDAPP_CLIENTID: 89e2820255c445b0a3997ce16fc535e5

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    #third, build with Maven
    - name: Build with Maven
      run: mvn -B clean package -s .maven/settings.xml
    #fourth, upload artifact, to utilize for other repo.(optional)
    - name: upload Artifact
      run: mkdir staging && cp target/*.jar staging
    - uses: actions/upload-artifact@v4
      with:
        name: Package
        path: staging
    #fifth, Deploy with Maven
    - name: Deploy
      run: mvn deploy -DskipMunitTests -DmuleDeploy -Dap.client_id=622dd1ffdae74adf85b2eddfd4277770 -Dap.client_secret=5128E7dECF9742b5b3a1FfCcdCB91701  -Dap.ca.client_id=05d2e359d7c2432e8101b471d8362e71 -Dap.ca.client_secret=5fF32E4A073c4C92867591cf3D9C33c5

  
